{ api:
  { neonDB:
     { instance: [Function: NeonDB],
       getRPCEndpoint: [Function: getRPCEndpoint],
       getBalance: [Function: getBalance],
       getClaims: [Function: getClaims],
       getMaxClaimAmount: [Function: getMaxClaimAmount],
       getTransactionHistory: [Function: getTransactionHistory],
       getHeight: [Function: getHeight] },
    neoscan:
     { instance: [Function: Neoscan],
       getRPCEndpoint: [Function: getRPCEndpoint],
       getBalance: [Function: getBalance],
       getClaims: [Function: getClaims],
       getMaxClaimAmount: [Function: getMaxClaimAmount],
       getHeight: [Function: getHeight],
       getTransactionHistory: [Function: getTransactionHistory] },
    checkProperty: [Function: checkProperty],
    modifyTransactionForEmptyTransaction: [Function: modifyTransactionForEmptyTransaction],
    extractDump: [Function: extractDump],
    getVerificationSignatureForSmartContract: [Function: getVerificationSignatureForSmartContract],
    createClaimTx: [Function: createClaimTx],
    createContractTx: [Function: createContractTx],
    createInvocationTx: [Function: createInvocationTx],
    createStateTx: [Function: createStateTx],
    fillUrl: [Function: fillUrl],
    fillBalance: [Function: fillBalance],
    fillSigningFunction: [Function: fillSigningFunction],
    fillClaims: [Function: fillClaims],
    addAttributeForMintToken: [Function: addAttributeForMintToken],
    addSignatureForMintToken: [Function: addSignatureForMintToken],
    sendTx: [Function: sendTx],
    applyTxToBalance: [Function: applyTxToBalance],
    signTx: [Function: signTx],
    signWithPrivateKey: [Function: signWithPrivateKey],
    addAttributeIfExecutingAsSmartContract: [Function: addAttributeIfExecutingAsSmartContract],
    addSignatureIfExecutingAsSmartContract: [Function: addSignatureIfExecutingAsSmartContract],
    sendAsset: [Function: sendAsset],
    claimGas: [Function: claimGas],
    doInvoke: [Function: doInvoke],
    setupVote: [Function: setupVote],
    makeIntent: [Function: makeIntent] },
 nep5:
  { abi:
     { name: [Function: name],
       symbol: [Function: symbol],
       decimals: [Function: decimals],
       totalSupply: [Function: totalSupply],
       balanceOf: [Function: balanceOf],
       transfer: [Function: transfer] },
    getToken: [Function: getToken],
    getTokenBalance: [Function: getTokenBalance] },
 settings:
  { defaultCalculationStrategy: [Function: balancedApproach],
    networks: { MainNet: [Object], TestNet: [Object], CozNet: [Object] },
    timeout: { ping: 2000, rpc: 30000 },
    httpsOnly: false },
 sc:
  { ContractParamType:
     { '0': 'Signature',
       '1': 'Boolean',
       '2': 'Integer',
       '3': 'Hash160',
       '4': 'Hash256',
       '5': 'ByteArray',
       '6': 'PublicKey',
       '7': 'String',
       '16': 'Array',
       '240': 'InteropInterface',
       '255': 'Void',
       Signature: 0,
       Boolean: 1,
       Integer: 2,
       Hash160: 3,
       Hash256: 4,
       ByteArray: 5,
       PublicKey: 6,
       String: 7,
       Array: 16,
       InteropInterface: 240,
       Void: 255 },
    ContractParam: [Function: ContractParam],
    likeContractParam: [Function: likeContractParam],
    default: [Function: ContractParam],
    createScript: [Function: createScript],
    generateDeployScript: [Function: generateDeployScript],
    ScriptBuilder: [Function: ScriptBuilder],
    StackItemType:
     { '0': 'ByteArray',
       '1': 'Boolean',
       '2': 'Integer',
       '4': 'InteropInterface',
       '128': 'Array',
       '129': 'Struct',
       '130': 'Map',
       ByteArray: 0,
       Boolean: 1,
       Integer: 2,
       InteropInterface: 4,
       Array: 128,
       Struct: 129,
       Map: 130 },
    StackItem: [Function: StackItem],
    hasChildren: [Function: hasChildren],
    OpCode:
     { '0': 'PUSHF',
       '1': 'PUSHBYTES1',
       '75': 'PUSHBYTES75',
       '76': 'PUSHDATA1',
       '77': 'PUSHDATA2',
       '78': 'PUSHDATA4',
       '79': 'PUSHM1',
       '81': 'PUSHT',
       '82': 'PUSH2',
       '83': 'PUSH3',
       '84': 'PUSH4',
       '85': 'PUSH5',
       '86': 'PUSH6',
       '87': 'PUSH7',
       '88': 'PUSH8',
       '89': 'PUSH9',
       '90': 'PUSH10',
       '91': 'PUSH11',
       '92': 'PUSH12',
       '93': 'PUSH13',
       '94': 'PUSH14',
       '95': 'PUSH15',
       '96': 'PUSH16',
       '97': 'NOP',
       '98': 'JMP',
       '99': 'JMPIF',
       '100': 'JMPIFNOT',
       '101': 'CALL',
       '102': 'RET',
       '103': 'APPCALL',
       '104': 'SYSCALL',
       '105': 'TAILCALL',
       '106': 'DUPFROMALTSTACK',
       '107': 'TOALTSTACK',
       '108': 'FROMALTSTACK',
       '109': 'XDROP',
       '114': 'XSWAP',
       '115': 'XTUCK',
       '116': 'DEPTH',
       '117': 'DROP',
       '118': 'DUP',
       '119': 'NIP',
       '120': 'OVER',
       '121': 'PICK',
       '122': 'ROLL',
       '123': 'ROT',
       '124': 'SWAP',
       '125': 'TUCK',
       '126': 'CAT',
       '127': 'SUBSTR',
       '128': 'LEFT',
       '129': 'RIGHT',
       '130': 'SIZE',
       '131': 'INVERT',
       '132': 'AND',
       '133': 'OR',
       '134': 'XOR',
       '135': 'EQUAL',
       '139': 'INC',
       '140': 'DEC',
       '141': 'SIGN',
       '143': 'NEGATE',
       '144': 'ABS',
       '145': 'NOT',
       '146': 'NZ',
       '147': 'ADD',
       '148': 'SUB',
       '149': 'MUL',
       '150': 'DIV',
       '151': 'MOD',
       '152': 'SHL',
       '153': 'SHR',
       '154': 'BOOLAND',
       '155': 'BOOLOR',
       '156': 'NUMEQUAL',
       '158': 'NUMNOTEQUAL',
       '159': 'LT',
       '160': 'GT',
       '161': 'LTE',
       '162': 'GTE',
       '163': 'MIN',
       '164': 'MAX',
       '165': 'WITHIN',
       '167': 'SHA1',
       '168': 'SHA256',
       '169': 'HASH160',
       '170': 'HASH256',
       '172': 'CHECKSIG',
       '174': 'CHECKMULTISIG',
       '192': 'ARRAYSIZE',
       '193': 'PACK',
       '194': 'UNPACK',
       '195': 'PICKITEM',
       '196': 'SETITEM',
       '197': 'NEWARRAY',
       '198': 'NEWSTRUCT',
       '200': 'APPEND',
       '201': 'REVERSE',
       '240': 'THROW',
       '241': 'THROWIFNOT',
       PUSH0: 0,
       PUSHF: 0,
       PUSHBYTES1: 1,
       PUSHBYTES75: 75,
       PUSHDATA1: 76,
       PUSHDATA2: 77,
       PUSHDATA4: 78,
       PUSHM1: 79,
       PUSH1: 81,
       PUSHT: 81,
       PUSH2: 82,
       PUSH3: 83,
       PUSH4: 84,
       PUSH5: 85,
       PUSH6: 86,
       PUSH7: 87,
       PUSH8: 88,
       PUSH9: 89,
       PUSH10: 90,
       PUSH11: 91,
       PUSH12: 92,
       PUSH13: 93,
       PUSH14: 94,
       PUSH15: 95,
       PUSH16: 96,
       NOP: 97,
       JMP: 98,
       JMPIF: 99,
       JMPIFNOT: 100,
       CALL: 101,
       RET: 102,
       APPCALL: 103,
       SYSCALL: 104,
       TAILCALL: 105,
       DUPFROMALTSTACK: 106,
       TOALTSTACK: 107,
       FROMALTSTACK: 108,
       XDROP: 109,
       XSWAP: 114,
       XTUCK: 115,
       DEPTH: 116,
       DROP: 117,
       DUP: 118,
       NIP: 119,
       OVER: 120,
       PICK: 121,
       ROLL: 122,
       ROT: 123,
       SWAP: 124,
       TUCK: 125,
       CAT: 126,
       SUBSTR: 127,
       LEFT: 128,
       RIGHT: 129,
       SIZE: 130,
       INVERT: 131,
       AND: 132,
       OR: 133,
       XOR: 134,
       EQUAL: 135,
       INC: 139,
       DEC: 140,
       SIGN: 141,
       NEGATE: 143,
       ABS: 144,
       NOT: 145,
       NZ: 146,
       ADD: 147,
       SUB: 148,
       MUL: 149,
       DIV: 150,
       MOD: 151,
       SHL: 152,
       SHR: 153,
       BOOLAND: 154,
       BOOLOR: 155,
       NUMEQUAL: 156,
       NUMNOTEQUAL: 158,
       LT: 159,
       GT: 160,
       LTE: 161,
       GTE: 162,
       MIN: 163,
       MAX: 164,
       WITHIN: 165,
       SHA1: 167,
       SHA256: 168,
       HASH160: 169,
       HASH256: 170,
       CHECKSIG: 172,
       CHECKMULTISIG: 174,
       ARRAYSIZE: 192,
       PACK: 193,
       UNPACK: 194,
       PICKITEM: 195,
       SETITEM: 196,
       NEWARRAY: 197,
       NEWSTRUCT: 198,
       APPEND: 200,
       REVERSE: 201,
       THROW: 240,
       THROWIFNOT: 241 } },
 rpc:
  { Network: [Function: Network],
    default: [Function: Network],
    Protocol: [Function: Protocol],
    Query: [Function: Query],
    queryRPC: [Function: queryRPC],
    RPCClient: [Function: RPCClient],
    buildParser: [Function: buildParser],
    NoOpParser: [Function: NoOpParser],
    IntegerParser: [Function: IntegerParser],
    StringParser: [Function: StringParser],
    Fixed8Parser: [Function: Fixed8Parser],
    SimpleParser: [Function: SimpleParser] },
 wallet:
  { Account: [Function: Account],
    default: [Function: Account],
    Balance: [Function: Balance],
    Claims: [Function: Claims],
    getPublicKeyEncoded: [Function: getPublicKeyEncoded],
    getPublicKeyUnencoded: [Function: getPublicKeyUnencoded],
    getPrivateKeyFromWIF: [Function: getPrivateKeyFromWIF],
    getWIFFromPrivateKey: [Function: getWIFFromPrivateKey],
    getPublicKeyFromPrivateKey: [Function: getPublicKeyFromPrivateKey],
    getVerificationScriptFromPublicKey: [Function],
    getScriptHashFromPublicKey: [Function],
    getAddressFromScriptHash: [Function],
    getScriptHashFromAddress: [Function],
    generateSignature: [Function],
    generatePrivateKey: [Function],
    encrypt: [Function: encrypt],
    decrypt: [Function: decrypt],
    isNEP2: [Function: isNEP2],
    isWIF: [Function: isWIF],
    isPrivateKey: [Function: isPrivateKey],
    isPublicKey: [Function: isPublicKey],
    isScriptHash: [Function: isScriptHash],
    isAddress: [Function: isAddress],
    curve:
     EC {
       curve: [Object],
       n: <BN: ffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551>,
       nh: <BN: 7fffffff800000007fffffffffffffffde737d56d38bcf4279dce5617e3192a8>,
       g: <EC Point x: 6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296 y: 4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5>,
       hash: [Object] },
    sign: [Function: sign],
    verify: [Function: verify],
    AssetBalance: [Function: AssetBalance],
    ClaimItem: [Function: ClaimItem],
    Coin: [Function: Coin],
    Wallet: [Function: Wallet],
    constructMultiSigVerificationScript: [Function: constructMultiSigVerificationScript],
    getPublicKeysFromVerificationScript: [Function: getPublicKeysFromVerificationScript],
    getSigningThresholdFromVerificationScript: [Function: getSigningThresholdFromVerificationScript],
    getSignaturesFromInvocationScript: [Function: getSignaturesFromInvocationScript] },
 CONST:
  { ADDR_VERSION: '17',
    ASSETS:
     { NEO: 'NEO',
       c56f33fc6ecfcd0c225c4ab356fee59390af8560be0e930faebe74a6daff7c9b: 'NEO',
       GAS: 'GAS',
       '602c79718b16e442de58778e148d0b1084e3b2dffd5de6b7b16cee7969282de7': 'GAS' },
    ASSET_ID:
     { NEO: 'c56f33fc6ecfcd0c225c4ab356fee59390af8560be0e930faebe74a6daff7c9b',
       GAS: '602c79718b16e442de58778e148d0b1084e3b2dffd5de6b7b16cee7969282de7' },
    CONTRACTS:
     { RPX: 'ecc6b20d3ccac1ee9ef109af5a7cdb85706b1df9',
       TEST_RPX: '5b7074e873973a6ed3708862f219a6fbf4d1c411',
       TEST_LWTF: 'd7678dd97c000be3f33e9362e673101bac4ca654',
       TEST_NXT: '0b6c1f919e95fe61c17a7612aebfaf4fda3a2214',
       TEST_RHTT4: 'f9572c5b119a6b5775a6af07f1cef5d310038f55' },
    DEFAULT_RPC:
     { MAIN: 'https://seed1.neo.org:10331',
       TEST: 'https://seed1.neo.org:20331' },
    DEFAULT_REQ: { jsonrpc: '2.0', method: 'getblockcount', params: [], id: 1234 },
    DEFAULT_SCRYPT: { n: 16384, r: 8, p: 8, size: 64 },
    DEFAULT_SYSFEE:
     { enrollmentTransaction: 1000,
       issueTransaction: 500,
       publishTransaction: 500,
       registerTransaction: 10000 },
    DEFAULT_WALLET:
     { name: 'myWallet',
       version: '1.0',
       scrypt: [Object],
       extra: null },
    DEFAULT_ACCOUNT_CONTRACT: { script: '', parameters: [Array], deployed: false },
    NEO_NETWORK: { MAIN: 'MainNet', TEST: 'TestNet' },
    NEP_HEADER: '0142',
    NEP_FLAG: 'e0',
    RPC_VERSION: '2.3.2',
    TX_VERSION: { CLAIM: 0, CONTRACT: 0, INVOCATION: 1, STATE: 0 } },
 u:
  { hexXor: [Function: hexXor],
    reverseArray: [Function: reverseArray],
    reverseHex: [Function: reverseHex],
    isHex: [Function: isHex],
    ensureHex: [Function: ensureHex],
    ab2str: [Function: ab2str],
    str2ab: [Function: str2ab],
    hexstring2ab: [Function: hexstring2ab],
    ab2hexstring: [Function: ab2hexstring],
    str2hexstring: [Function: str2hexstring],
    hexstring2str: [Function: hexstring2str],
    int2hex: [Function: int2hex],
    num2hexstring: [Function: num2hexstring],
    num2fixed8: [Function: num2fixed8],
    fixed82num: [Function: fixed82num],
    num2VarInt: [Function: num2VarInt],
    hash160: [Function: hash160],
    hash256: [Function: hash256],
    sha256: [Function: sha256],
    ripemd160: [Function: ripemd160],
    Fixed8: [Function: Fixed8],
    default: [Function: Fixed8],
    StringStream: [Function: StringStream],
    generateRandomArray: [Function] },
 tx:
  { TransactionAttribute: [Function: TransactionAttribute],
    default: [Function: TransactionAttribute],
    TransactionInput: [Function: TransactionInput],
    TransactionOutput: [Function: TransactionOutput],
    Witness: [Function: Witness],
    StateType: { '64': 'Account', '72': 'Validator', Account: 64, Validator: 72 },
    StateDescriptor: [Function: StateDescriptor],
    ClaimTransaction: [Function: ClaimTransaction],
    ContractTransaction: [Function: ContractTransaction],
    InvocationTransaction: [Function: InvocationTransaction],
    StateTransaction: [Function: StateTransaction],
    TransactionType:
     { '0': 'MinerTransaction',
       '1': 'IssueTransaction',
       '2': 'ClaimTransaction',
       '32': 'EnrollmentTransaction',
       '64': 'RegisterTransaction',
       '128': 'ContractTransaction',
       '144': 'StateTransaction',
       '208': 'PublishTransaction',
       '209': 'InvocationTransaction',
       MinerTransaction: 0,
       IssueTransaction: 1,
       ClaimTransaction: 2,
       EnrollmentTransaction: 32,
       RegisterTransaction: 64,
       ContractTransaction: 128,
       StateTransaction: 144,
       PublishTransaction: 208,
       InvocationTransaction: 209 },
    Transaction: [Function: Transaction],
    BaseTransaction: [Function: BaseTransaction],
    smallestFirst: [Function: smallestFirst],
    biggestFirst: [Function: biggestFirst],
    balancedApproach: [Function: balancedApproach],
    TxAttrUsage:
     { '0': 'ContractHash',
       '2': 'ECDH02',
       '3': 'ECDH03',
       '32': 'Script',
       '48': 'Vote',
       '129': 'DescriptionUrl',
       '144': 'Description',
       '161': 'Hash1',
       '162': 'Hash2',
       '163': 'Hash3',
       '164': 'Hash4',
       '165': 'Hash5',
       '166': 'Hash6',
       '167': 'Hash7',
       '168': 'Hash8',
       '169': 'Hash9',
       '170': 'Hash10',
       '171': 'Hash11',
       '172': 'Hash12',
       '173': 'Hash13',
       '174': 'Hash14',
       '175': 'Hash15',
       '240': 'Remark',
       '241': 'Remark1',
       '242': 'Remark2',
       '243': 'Remark3',
       '244': 'Remark4',
       '245': 'Remark5',
       '246': 'Remark6',
       '247': 'Remark7',
       '248': 'Remark8',
       '249': 'Remark9',
       '250': 'Remark10',
       '251': 'Remark11',
       '252': 'Remark12',
       '253': 'Remark13',
       '254': 'Remark14',
       '255': 'Remark15',
       ContractHash: 0,
       ECDH02: 2,
       ECDH03: 3,
       Script: 32,
       Vote: 48,
       DescriptionUrl: 129,
       Description: 144,
       Hash1: 161,
       Hash2: 162,
       Hash3: 163,
       Hash4: 164,
       Hash5: 165,
       Hash6: 166,
       Hash7: 167,
       Hash8: 168,
       Hash9: 169,
       Hash10: 170,
       Hash11: 171,
       Hash12: 172,
       Hash13: 173,
       Hash14: 174,
       Hash15: 175,
       Remark: 240,
       Remark1: 241,
       Remark2: 242,
       Remark3: 243,
       Remark4: 244,
       Remark5: 245,
       Remark6: 246,
       Remark7: 247,
       Remark8: 248,
       Remark9: 249,
       Remark10: 250,
       Remark11: 251,
       Remark12: 252,
       Remark13: 253,
       Remark14: 254,
       Remark15: 255 },
    defaultCalculationStrategy: [Function: balancedApproach] },
 default:
  { sendAsset: [Function: sendAsset],
    claimGas: [Function: claimGas],
    doInvoke: [Function: doInvoke],
    setupVote: [Function: setupVote],
    create:
     { account: [Function: account],
       privateKey: [Function],
       signature: [Function],
       wallet: [Function: wallet],
       claimTx: [Function: claimTx],
       contractTx: [Function: contractTx],
       invocationTx: [Function: invocationTx],
       stateTx: [Function: stateTx],
       contractParam: [Function: contractParam],
       script: [Function: createScript],
       scriptBuilder: [Function: scriptBuilder],
       deployScript: [Function: deployScript],
       rpcClient: [Function: rpcClient],
       query: [Function: query],
       network: [Function: network],
       stringStream: [Function: stringStream],
       fixed8: [Function: fixed8] },
    deserialize:
     { attribute: [Function: deserialize],
       input: [Function: deserialize],
       output: [Function: deserialize],
       script: [Function: deserialize],
       tx: [Function: deserialize] },
    is:
     { address: [Function: isAddress],
       publicKey: [Function: isPublicKey],
       encryptedKey: [Function: isNEP2],
       privateKey: [Function: isPrivateKey],
       wif: [Function: isWIF],
       scriptHash: [Function: isScriptHash] },
    sign: { hex: [Function: sign], message: [Function: message] },
    verify: { hex: [Function: verify], message: [Function: message] },
    encrypt: { privateKey: [Function: encrypt] },
    decrypt: { privateKey: [Function: decrypt] },
    add: { network: [Function: network] },
    remove: { network: [Function: network] },
    u:
     { hexXor: [Function: hexXor],
       reverseArray: [Function: reverseArray],
       reverseHex: [Function: reverseHex],
       isHex: [Function: isHex],
       ensureHex: [Function: ensureHex],
       ab2str: [Function: ab2str],
       str2ab: [Function: str2ab],
       hexstring2ab: [Function: hexstring2ab],
       ab2hexstring: [Function: ab2hexstring],
       str2hexstring: [Function: str2hexstring],
       hexstring2str: [Function: hexstring2str],
       int2hex: [Function: int2hex],
       num2hexstring: [Function: num2hexstring],
       num2fixed8: [Function: num2fixed8],
       fixed82num: [Function: fixed82num],
       num2VarInt: [Function: num2VarInt],
       hash160: [Function: hash160],
       hash256: [Function: hash256],
       sha256: [Function: sha256],
       ripemd160: [Function: ripemd160],
       Fixed8: [Function: Fixed8],
       default: [Function: Fixed8],
       StringStream: [Function: StringStream],
       generateRandomArray: [Function] },
    CONST:
     { ADDR_VERSION: '17',
       ASSETS: [Object],
       ASSET_ID: [Object],
       CONTRACTS: [Object],
       DEFAULT_RPC: [Object],
       DEFAULT_REQ: [Object],
       DEFAULT_SCRYPT: [Object],
       DEFAULT_SYSFEE: [Object],
       DEFAULT_WALLET: [Object],
       DEFAULT_ACCOUNT_CONTRACT: [Object],
       NEO_NETWORK: [Object],
       NEP_HEADER: '0142',
       NEP_FLAG: 'e0',
       RPC_VERSION: '2.3.2',
       TX_VERSION: [Object] } } }